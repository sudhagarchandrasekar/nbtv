"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-select_3_entry_js"],{

/***/ 2619:
/*!*****************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_select": function() { return /* binding */ Select; },
/* harmony export */   "ion_select_option": function() { return /* binding */ SelectOption; },
/* harmony export */   "ion_select_popover": function() { return /* binding */ SelectPopover; }
/* harmony export */ });
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ 9341);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ 2783);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ 5960);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ 9367);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ 3703);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./index-06cd27b1.js */ 7781);
/* harmony import */ var _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ionic-global-a049bcbf.js */ 8420);
/* harmony import */ var _helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers-eed79a2b.js */ 8596);
/* harmony import */ var _overlays_5f2f4ffc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./overlays-5f2f4ffc.js */ 4511);
/* harmony import */ var _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./theme-a24ff1ad.js */ 7679);
/* harmony import */ var _haptic_9a9aa7ec_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./haptic-9a9aa7ec.js */ 4380);
/* harmony import */ var _index_41bf41f2_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./index-41bf41f2.js */ 4506);
/* harmony import */ var _gesture_controller_68c023a4_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./gesture-controller-68c023a4.js */ 150);
/* harmony import */ var _index_c841c933_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./index-c841c933.js */ 7162);
/* harmony import */ var _animation_c9c2a359_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./animation-c9c2a359.js */ 3607);
/* harmony import */ var _framework_delegate_a922018c_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./framework-delegate-a922018c.js */ 6525);
/* harmony import */ var _index_c8ef55b5_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./index-c8ef55b5.js */ 3445);
/* harmony import */ var _cubic_bezier_154a53a5_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./cubic-bezier-154a53a5.js */ 9077);
/* harmony import */ var _hardware_back_button_ace6a71b_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./hardware-back-button-ace6a71b.js */ 2170);






/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */















var watchForOptions = function watchForOptions(containerEl, tagName, onChange) {
  /* tslint:disable-next-line */
  if (typeof MutationObserver === 'undefined') {
    return;
  }

  var mutation = new MutationObserver(function (mutationList) {
    onChange(getSelectedOption(mutationList, tagName));
  });
  mutation.observe(containerEl, {
    childList: true,
    subtree: true
  });
  return mutation;
};

var getSelectedOption = function getSelectedOption(mutationList, tagName) {
  var newOption;
  mutationList.forEach(function (mut) {
    // tslint:disable-next-line: prefer-for-of
    for (var i = 0; i < mut.addedNodes.length; i++) {
      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;
    }
  });
  return newOption;
};

var findCheckedOption = function findCheckedOption(el, tagName) {
  if (el.nodeType !== 1) {
    return undefined;
  }

  var options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));
  return options.find(function (o) {
    return o.value === el.value;
  });
};

var selectIosCss = ":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}button{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.select-icon{position:relative}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-2px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:20px}.select-icon{width:12px;height:18px;opacity:0.33}";
var selectMdCss = ":host{--placeholder-color:currentColor;--placeholder-opacity:0.33;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;font-family:var(--ion-font-family, inherit);overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:0.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:var(--placeholder-color);opacity:var(--placeholder-opacity)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}button{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.select-icon{position:relative}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-2px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;pointer-events:none}[dir=rtl] .select-icon-inner,:host-context([dir=rtl]) .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:16px}.select-icon{width:19px;height:19px;-webkit-transition:-webkit-transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:transform 0.15s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:0.55}:host-context(.item-label-stacked) .select-icon,:host-context(.item-label-floating:not(.item-fill-outline)) .select-icon,:host-context(.item-label-floating.item-fill-outline){-webkit-transform:translate3d(0,  -9px,  0);transform:translate3d(0,  -9px,  0)}:host-context(.item-has-focus) .select-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}:host-context(.item-has-focus.item-label-stacked) .select-icon,:host-context(.item-has-focus.item-label-floating:not(.item-fill-outline)) .select-icon{-webkit-transform:translate3d(0,  -9px,  0) rotate(180deg);transform:translate3d(0,  -9px,  0) rotate(180deg)}:host-context(ion-item.ion-focused) .select-icon,:host-context(.item-has-focus) .select-icon{color:var(--highlight-color-focused);opacity:1}";

var Select = /*#__PURE__*/function () {
  function Select(hostRef) {
    var _this = this;

    (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, Select);

    (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.ionChange = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionChange", 7);
    this.ionCancel = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionCancel", 7);
    this.ionFocus = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionFocus", 7);
    this.ionBlur = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionBlur", 7);
    this.ionStyle = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.e)(this, "ionStyle", 7);
    this.inputId = "ion-sel-".concat(selectIds++);
    this.didInit = false;
    this.isExpanded = false;
    /**
     * If `true`, the user cannot interact with the select.
     */

    this.disabled = false;
    /**
     * The text to display on the cancel button.
     */

    this.cancelText = 'Cancel';
    /**
     * The text to display on the ok button.
     */

    this.okText = 'OK';
    /**
     * The name of the control, which is submitted with the form data.
     */

    this.name = this.inputId;
    /**
     * If `true`, the select can accept multiple values.
     */

    this.multiple = false;
    /**
     * The interface the select should use: `action-sheet`, `popover` or `alert`.
     */

    this.interface = 'alert';
    /**
     * Any additional options that the `alert`, `action-sheet` or `popover` interface
     * can take. See the [ion-alert docs](../alert), the
     * [ion-action-sheet docs](../action-sheet) and the
     * [ion-popover docs](../popover) for the
     * create options for each interface.
     *
     * Note: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.
     */

    this.interfaceOptions = {};

    this.onClick = function (ev) {
      _this.setFocus();

      _this.open(ev);
    };

    this.onFocus = function () {
      _this.ionFocus.emit();
    };

    this.onBlur = function () {
      _this.ionBlur.emit();
    };
  }

  (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(Select, [{
    key: "styleChanged",
    value: function styleChanged() {
      this.emitStyle();
    }
  }, {
    key: "valueChanged",
    value: function valueChanged() {
      this.emitStyle();

      if (this.didInit) {
        this.ionChange.emit({
          value: this.value
        });
      }
    }
  }, {
    key: "connectedCallback",
    value: function () {
      var _connectedCallback = (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee2() {
        var _this2 = this;

        return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this.updateOverlayOptions();
                this.emitStyle();
                this.mutationO = watchForOptions(this.el, 'ion-select-option', /*#__PURE__*/(0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee() {
                  return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          _this2.updateOverlayOptions();

                        case 1:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                })));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function connectedCallback() {
        return _connectedCallback.apply(this, arguments);
      }

      return connectedCallback;
    }()
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this.mutationO) {
        this.mutationO.disconnect();
        this.mutationO = undefined;
      }
    }
  }, {
    key: "componentDidLoad",
    value: function componentDidLoad() {
      this.didInit = true;
    }
    /**
     * Open the select overlay. The overlay is either an alert, action sheet, or popover,
     * depending on the `interface` property on the `ion-select`.
     *
     * @param event The user interface event that called the open.
     */

  }, {
    key: "open",
    value: function () {
      var _open = (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee3(event) {
        var _this3 = this;

        var overlay, indexOfSelected, selectedEl;
        return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(this.disabled || this.isExpanded)) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt("return", undefined);

              case 2:
                _context3.next = 4;
                return this.createOverlay(event);

              case 4:
                overlay = this.overlay = _context3.sent;
                this.isExpanded = true;
                overlay.onDidDismiss().then(function () {
                  _this3.overlay = undefined;
                  _this3.isExpanded = false;

                  _this3.setFocus();
                });
                _context3.next = 9;
                return overlay.present();

              case 9:
                // focus selected option for popovers
                if (this.interface === 'popover') {
                  indexOfSelected = this.childOpts.map(function (o) {
                    return o.value;
                  }).indexOf(this.value);
                  indexOfSelected = indexOfSelected > -1 ? indexOfSelected : 0; // default to first option if nothing selected

                  selectedEl = overlay.querySelector(".select-interface-option:nth-child(".concat(indexOfSelected + 1, ")"));

                  if (selectedEl) {
                    (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_7__.f)(selectedEl);
                  }
                }

                return _context3.abrupt("return", overlay);

              case 11:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function open(_x) {
        return _open.apply(this, arguments);
      }

      return open;
    }()
  }, {
    key: "createOverlay",
    value: function createOverlay(ev) {
      var selectInterface = this.interface;

      if (selectInterface === 'action-sheet' && this.multiple) {
        console.warn("Select interface cannot be \"".concat(selectInterface, "\" with a multi-value select. Using the \"alert\" interface instead."));
        selectInterface = 'alert';
      }

      if (selectInterface === 'popover' && !ev) {
        console.warn("Select interface cannot be a \"".concat(selectInterface, "\" without passing an event. Using the \"alert\" interface instead."));
        selectInterface = 'alert';
      }

      if (selectInterface === 'action-sheet') {
        return this.openActionSheet();
      }

      if (selectInterface === 'popover') {
        return this.openPopover(ev);
      }

      return this.openAlert();
    }
  }, {
    key: "updateOverlayOptions",
    value: function updateOverlayOptions() {
      var overlay = this.overlay;

      if (!overlay) {
        return;
      }

      var childOpts = this.childOpts;
      var value = this.value;

      switch (this.interface) {
        case 'action-sheet':
          overlay.buttons = this.createActionSheetButtons(childOpts, value);
          break;

        case 'popover':
          var popover = overlay.querySelector('ion-select-popover');

          if (popover) {
            popover.options = this.createPopoverOptions(childOpts, value);
          }

          break;

        case 'alert':
          var inputType = this.multiple ? 'checkbox' : 'radio';
          overlay.inputs = this.createAlertInputs(childOpts, inputType, value);
          break;
      }
    }
  }, {
    key: "createActionSheetButtons",
    value: function createActionSheetButtons(data, selectValue) {
      var _this4 = this;

      var actionSheetButtons = data.map(function (option) {
        var value = getOptionValue(option); // Remove hydrated before copying over classes

        var copyClasses = Array.from(option.classList).filter(function (cls) {
          return cls !== 'hydrated';
        }).join(' ');
        var optClass = "".concat(OPTION_CLASS, " ").concat(copyClasses);
        return {
          role: isOptionSelected(value, selectValue, _this4.compareWith) ? 'selected' : '',
          text: option.textContent,
          cssClass: optClass,
          handler: function handler() {
            _this4.value = value;
          }
        };
      }); // Add "cancel" button

      actionSheetButtons.push({
        text: this.cancelText,
        role: 'cancel',
        handler: function handler() {
          _this4.ionCancel.emit();
        }
      });
      return actionSheetButtons;
    }
  }, {
    key: "createAlertInputs",
    value: function createAlertInputs(data, inputType, selectValue) {
      var _this5 = this;

      var alertInputs = data.map(function (option) {
        var value = getOptionValue(option); // Remove hydrated before copying over classes

        var copyClasses = Array.from(option.classList).filter(function (cls) {
          return cls !== 'hydrated';
        }).join(' ');
        var optClass = "".concat(OPTION_CLASS, " ").concat(copyClasses);
        return {
          type: inputType,
          cssClass: optClass,
          label: option.textContent || '',
          value: value,
          checked: isOptionSelected(value, selectValue, _this5.compareWith),
          disabled: option.disabled
        };
      });
      return alertInputs;
    }
  }, {
    key: "createPopoverOptions",
    value: function createPopoverOptions(data, selectValue) {
      var _this6 = this;

      var popoverOptions = data.map(function (option) {
        var value = getOptionValue(option); // Remove hydrated before copying over classes

        var copyClasses = Array.from(option.classList).filter(function (cls) {
          return cls !== 'hydrated';
        }).join(' ');
        var optClass = "".concat(OPTION_CLASS, " ").concat(copyClasses);
        return {
          text: option.textContent || '',
          cssClass: optClass,
          value: value,
          checked: isOptionSelected(value, selectValue, _this6.compareWith),
          disabled: option.disabled,
          handler: function handler(selected) {
            _this6.value = selected;

            if (!_this6.multiple) {
              _this6.close();
            }
          }
        };
      });
      return popoverOptions;
    }
  }, {
    key: "openPopover",
    value: function () {
      var _openPopover = (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee4(ev) {
        var interfaceOptions, mode, showBackdrop, multiple, value, event, size, item, popoverOpts;
        return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                interfaceOptions = this.interfaceOptions;
                mode = (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
                showBackdrop = mode === 'md' ? false : true;
                multiple = this.multiple;
                value = this.value;
                event = ev;
                size = 'auto';
                item = this.el.closest('ion-item'); // If the select is inside of an item containing a floating
                // or stacked label then the popover should take up the
                // full width of the item when it presents

                if (item && (item.classList.contains('item-label-floating') || item.classList.contains('item-label-stacked'))) {
                  event = Object.assign(Object.assign({}, ev), {
                    detail: {
                      ionShadowTarget: item
                    }
                  });
                  size = 'cover';
                }

                popoverOpts = Object.assign(Object.assign({
                  mode: mode,
                  event: event,
                  alignment: 'center',
                  size: size,
                  showBackdrop: showBackdrop
                }, interfaceOptions), {
                  component: 'ion-select-popover',
                  cssClass: ['select-popover', interfaceOptions.cssClass],
                  componentProps: {
                    header: interfaceOptions.header,
                    subHeader: interfaceOptions.subHeader,
                    message: interfaceOptions.message,
                    multiple: multiple,
                    value: value,
                    options: this.createPopoverOptions(this.childOpts, value)
                  }
                });
                return _context4.abrupt("return", _overlays_5f2f4ffc_js__WEBPACK_IMPORTED_MODULE_8__.c.create(popoverOpts));

              case 11:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function openPopover(_x2) {
        return _openPopover.apply(this, arguments);
      }

      return openPopover;
    }()
  }, {
    key: "openActionSheet",
    value: function () {
      var _openActionSheet = (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee5() {
        var mode, interfaceOptions, actionSheetOpts;
        return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                mode = (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
                interfaceOptions = this.interfaceOptions;
                actionSheetOpts = Object.assign(Object.assign({
                  mode: mode
                }, interfaceOptions), {
                  buttons: this.createActionSheetButtons(this.childOpts, this.value),
                  cssClass: ['select-action-sheet', interfaceOptions.cssClass]
                });
                return _context5.abrupt("return", _overlays_5f2f4ffc_js__WEBPACK_IMPORTED_MODULE_8__.b.create(actionSheetOpts));

              case 4:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function openActionSheet() {
        return _openActionSheet.apply(this, arguments);
      }

      return openActionSheet;
    }()
  }, {
    key: "openAlert",
    value: function () {
      var _openAlert = (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().mark(function _callee6() {
        var _this7 = this;

        var label, labelText, interfaceOptions, inputType, mode, alertOpts;
        return D_muthus_nbtv_master_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_4___default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                label = this.getLabel();
                labelText = label ? label.textContent : null;
                interfaceOptions = this.interfaceOptions;
                inputType = this.multiple ? 'checkbox' : 'radio';
                mode = (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);
                alertOpts = Object.assign(Object.assign({
                  mode: mode
                }, interfaceOptions), {
                  header: interfaceOptions.header ? interfaceOptions.header : labelText,
                  inputs: this.createAlertInputs(this.childOpts, inputType, this.value),
                  buttons: [{
                    text: this.cancelText,
                    role: 'cancel',
                    handler: function handler() {
                      _this7.ionCancel.emit();
                    }
                  }, {
                    text: this.okText,
                    handler: function handler(selectedValues) {
                      _this7.value = selectedValues;
                    }
                  }],
                  cssClass: ['select-alert', interfaceOptions.cssClass, this.multiple ? 'multiple-select-alert' : 'single-select-alert']
                });
                return _context6.abrupt("return", _overlays_5f2f4ffc_js__WEBPACK_IMPORTED_MODULE_8__.a.create(alertOpts));

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function openAlert() {
        return _openAlert.apply(this, arguments);
      }

      return openAlert;
    }()
    /**
     * Close the select interface.
     */

  }, {
    key: "close",
    value: function close() {
      // TODO check !this.overlay || !this.isFocus()
      if (!this.overlay) {
        return Promise.resolve(false);
      }

      return this.overlay.dismiss();
    }
  }, {
    key: "getLabel",
    value: function getLabel() {
      return (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_7__.k)(this.el);
    }
  }, {
    key: "hasValue",
    value: function hasValue() {
      return this.getText() !== '';
    }
  }, {
    key: "childOpts",
    get: function get() {
      return Array.from(this.el.querySelectorAll('ion-select-option'));
    }
  }, {
    key: "getText",
    value: function getText() {
      var selectedText = this.selectedText;

      if (selectedText != null && selectedText !== '') {
        return selectedText;
      }

      return generateText(this.childOpts, this.value, this.compareWith);
    }
  }, {
    key: "setFocus",
    value: function setFocus() {
      if (this.focusEl) {
        this.focusEl.focus();
      }
    }
  }, {
    key: "emitStyle",
    value: function emitStyle() {
      this.ionStyle.emit({
        'interactive': true,
        'interactive-disabled': this.disabled,
        'select': true,
        'select-disabled': this.disabled,
        'has-placeholder': this.placeholder !== undefined,
        'has-value': this.hasValue(),
        'has-focus': this.isExpanded
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _class,
          _this8 = this;

      var disabled = this.disabled,
          el = this.el,
          inputId = this.inputId,
          isExpanded = this.isExpanded,
          name = this.name,
          placeholder = this.placeholder,
          value = this.value;
      var mode = (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this);

      var _getAriaLabel = (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_7__.e)(el, inputId),
          labelText = _getAriaLabel.labelText,
          labelId = _getAriaLabel.labelId;

      (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_7__.h)(true, el, name, parseValue(value), disabled);
      var displayValue = this.getText();
      var addPlaceholderClass = false;
      var selectText = displayValue;

      if (selectText === '' && placeholder !== undefined) {
        selectText = placeholder;
        addPlaceholderClass = true;
      }

      var selectTextClasses = {
        'select-text': true,
        'select-placeholder': addPlaceholderClass
      };
      var textPart = addPlaceholderClass ? 'placeholder' : 'text'; // If there is a label then we need to concatenate it with the
      // current value (or placeholder) and a comma so it separates
      // nicely when the screen reader announces it, otherwise just
      // announce the value / placeholder

      var displayLabel = labelText !== undefined ? selectText !== '' ? "".concat(selectText, ", ").concat(labelText) : labelText : selectText;
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        onClick: this.onClick,
        role: "button",
        "aria-haspopup": "listbox",
        "aria-disabled": disabled ? 'true' : null,
        "aria-label": displayLabel,
        class: (_class = {}, (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, mode, true), (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, 'in-item', (0,_theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_9__.h)('ion-item', el)), (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, 'select-disabled', disabled), (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_class, 'select-expanded', isExpanded), _class)
      }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        "aria-hidden": "true",
        class: selectTextClasses,
        part: textPart
      }, selectText), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "select-icon",
        role: "presentation",
        part: "icon"
      }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("div", {
        class: "select-icon-inner"
      })), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("label", {
        id: labelId
      }, displayLabel), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("button", {
        type: "button",
        disabled: disabled,
        id: inputId,
        "aria-labelledby": labelId,
        "aria-haspopup": "listbox",
        "aria-expanded": "".concat(isExpanded),
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        ref: function ref(focusEl) {
          return _this8.focusEl = focusEl;
        }
      }));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }], [{
    key: "watchers",
    get: function get() {
      return {
        "disabled": ["styleChanged"],
        "placeholder": ["styleChanged"],
        "isExpanded": ["styleChanged"],
        "value": ["valueChanged"]
      };
    }
  }]);

  return Select;
}();

var isOptionSelected = function isOptionSelected(currentValue, compareValue, compareWith) {
  if (currentValue === undefined) {
    return false;
  }

  if (Array.isArray(currentValue)) {
    return currentValue.some(function (val) {
      return compareOptions(val, compareValue, compareWith);
    });
  } else {
    return compareOptions(currentValue, compareValue, compareWith);
  }
};

var getOptionValue = function getOptionValue(el) {
  var value = el.value;
  return value === undefined ? el.textContent || '' : value;
};

var parseValue = function parseValue(value) {
  if (value == null) {
    return undefined;
  }

  if (Array.isArray(value)) {
    return value.join(',');
  }

  return value.toString();
};

var compareOptions = function compareOptions(currentValue, compareValue, compareWith) {
  if (typeof compareWith === 'function') {
    return compareWith(currentValue, compareValue);
  } else if (typeof compareWith === 'string') {
    return currentValue[compareWith] === compareValue[compareWith];
  } else {
    return Array.isArray(compareValue) ? compareValue.includes(currentValue) : currentValue === compareValue;
  }
};

var generateText = function generateText(opts, value, compareWith) {
  if (value === undefined) {
    return '';
  }

  if (Array.isArray(value)) {
    return value.map(function (v) {
      return textForValue(opts, v, compareWith);
    }).filter(function (opt) {
      return opt !== null;
    }).join(', ');
  } else {
    return textForValue(opts, value, compareWith) || '';
  }
};

var textForValue = function textForValue(opts, value, compareWith) {
  var selectOpt = opts.find(function (opt) {
    return compareOptions(getOptionValue(opt), value, compareWith);
  });
  return selectOpt ? selectOpt.textContent : null;
};

var selectIds = 0;
var OPTION_CLASS = 'select-interface-option';
Select.style = {
  ios: selectIosCss,
  md: selectMdCss
};
var selectOptionCss = ":host{display:none}";

var SelectOption = /*#__PURE__*/function () {
  function SelectOption(hostRef) {
    (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SelectOption);

    (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    this.inputId = "ion-selopt-".concat(selectOptionIds++);
    /**
     * If `true`, the user cannot interact with the select option. This property does not apply when `interface="action-sheet"` as `ion-action-sheet` does not allow for disabled buttons.
     */

    this.disabled = false;
  }

  (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SelectOption, [{
    key: "render",
    value: function render() {
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        role: "option",
        id: this.inputId,
        class: (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this)
      });
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.i)(this);
    }
  }]);

  return SelectOption;
}();

var selectOptionIds = 0;
SelectOption.style = selectOptionCss;
var selectPopoverIosCss = ".sc-ion-select-popover-ios-h ion-list.sc-ion-select-popover-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-list-header.sc-ion-select-popover-ios,ion-label.sc-ion-select-popover-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}";
var selectPopoverMdCss = ".sc-ion-select-popover-md-h ion-list.sc-ion-select-popover-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-list-header.sc-ion-select-popover-md,ion-label.sc-ion-select-popover-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-list.sc-ion-select-popover-md ion-radio.sc-ion-select-popover-md{opacity:0}ion-item.sc-ion-select-popover-md{--inner-border-width:0}.item-radio-checked.sc-ion-select-popover-md{--background:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.08);--background-focused:var(--ion-color-primary, #3880ff);--background-focused-opacity:0.2;--background-hover:var(--ion-color-primary, #3880ff);--background-hover-opacity:0.12}.item-checkbox-checked.sc-ion-select-popover-md{--background-activated:var(--ion-item-color, var(--ion-text-color, #000));--background-focused:var(--ion-item-color, var(--ion-text-color, #000));--background-hover:var(--ion-item-color, var(--ion-text-color, #000));--color:var(--ion-color-primary, #3880ff)}";

var SelectPopover = /*#__PURE__*/function () {
  function SelectPopover(hostRef) {
    (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, SelectPopover);

    (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.r)(this, hostRef);
    /**
     * An array of options for the popover
     */

    this.options = [];
  }

  (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(SelectPopover, [{
    key: "onSelect",
    value: function onSelect(ev) {
      this.setChecked(ev);
      this.callOptionHandler(ev);
    }
  }, {
    key: "findOptionFromEvent",
    value: function findOptionFromEvent(ev) {
      var options = this.options;
      return options.find(function (o) {
        return o.value === ev.target.value;
      });
    }
    /**
     * When an option is selected we need to get the value(s)
     * of the selected option(s) and return it in the option
     * handler
     */

  }, {
    key: "callOptionHandler",
    value: function callOptionHandler(ev) {
      var option = this.findOptionFromEvent(ev);
      var values = this.getValues(ev);

      if (option && option.handler) {
        (0,_overlays_5f2f4ffc_js__WEBPACK_IMPORTED_MODULE_8__.s)(option.handler, values);
      }
    }
    /**
     * This is required when selecting a radio that is already
     * selected because it will not trigger the ionChange event
     * but we still want to close the popover
     */

  }, {
    key: "rbClick",
    value: function rbClick(ev) {
      this.callOptionHandler(ev);
    }
  }, {
    key: "setChecked",
    value: function setChecked(ev) {
      var multiple = this.multiple;
      var option = this.findOptionFromEvent(ev); // this is a popover with checkboxes (multiple value select)
      // we need to set the checked value for this option

      if (multiple && option) {
        option.checked = ev.detail.checked;
      }
    }
  }, {
    key: "getValues",
    value: function getValues(ev) {
      var multiple = this.multiple,
          options = this.options;

      if (multiple) {
        // this is a popover with checkboxes (multiple value select)
        // return an array of all the checked values
        return options.filter(function (o) {
          return o.checked;
        }).map(function (o) {
          return o.value;
        });
      } // this is a popover with radio buttons (single value select)
      // return the value that was clicked, otherwise undefined


      var option = this.findOptionFromEvent(ev);
      return option ? option.value : undefined;
    }
  }, {
    key: "renderOptions",
    value: function renderOptions(options) {
      var multiple = this.multiple;

      switch (multiple) {
        case true:
          return this.renderCheckboxOptions(options);

        default:
          return this.renderRadioOptions(options);
      }
    }
  }, {
    key: "renderCheckboxOptions",
    value: function renderCheckboxOptions(options) {
      return options.map(function (option) {
        return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-item", {
          class: (0,_theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_9__.g)(option.cssClass)
        }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-checkbox", {
          slot: "start",
          value: option.value,
          disabled: option.disabled,
          checked: option.checked
        }), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-label", null, option.text));
      });
    }
  }, {
    key: "renderRadioOptions",
    value: function renderRadioOptions(options) {
      var _this9 = this;

      var checked = options.filter(function (o) {
        return o.checked;
      }).map(function (o) {
        return o.value;
      })[0];
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-radio-group", {
        value: checked
      }, options.map(function (option) {
        return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-item", {
          class: (0,_theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_9__.g)(option.cssClass)
        }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-label", null, option.text), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-radio", {
          value: option.value,
          disabled: option.disabled,
          onClick: function onClick(ev) {
            return _this9.rbClick(ev);
          }
        }));
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var header = this.header,
          message = this.message,
          options = this.options,
          subHeader = this.subHeader;
      var hasSubHeaderOrMessage = subHeader !== undefined || message !== undefined;
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.H, {
        class: (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_6__.b)(this)
      }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-list", null, header !== undefined && (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-list-header", null, header), hasSubHeaderOrMessage && (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-item", null, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("ion-label", {
        class: "ion-text-wrap"
      }, subHeader !== undefined && (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("h3", null, subHeader), message !== undefined && (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_5__.h)("p", null, message))), this.renderOptions(options)));
    }
  }]);

  return SelectPopover;
}();

SelectPopover.style = {
  ios: selectPopoverIosCss,
  md: selectPopoverMdCss
};


/***/ })

}]);
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-select_3_entry_js.js.map
"use strict";
(self["webpackChunkapp"] = self["webpackChunkapp"] || []).push([["node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js"],{

/***/ 5919:
/*!*******************************************************************************!*\
  !*** ./node_modules/@ionic/core/dist/esm/ion-picker-column-internal.entry.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ion_picker_column_internal": function() { return /* binding */ PickerColumnInternal; }
/* harmony export */ });
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ 9341);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ 5960);
/* harmony import */ var D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ 9367);
/* harmony import */ var _index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index-06cd27b1.js */ 7781);
/* harmony import */ var _ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ionic-global-a049bcbf.js */ 8420);
/* harmony import */ var _helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./helpers-eed79a2b.js */ 8596);
/* harmony import */ var _haptic_9a9aa7ec_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./haptic-9a9aa7ec.js */ 4380);
/* harmony import */ var _theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./theme-a24ff1ad.js */ 7679);




/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */





var pickerColumnInternalIosCss = ":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}";
var pickerColumnInternalMdCss = ":host{padding-left:16px;padding-right:16px;padding-top:0px;padding-bottom:0px;height:200px;outline:none;font-size:22px;-webkit-scroll-snap-type:y mandatory;-ms-scroll-snap-type:y mandatory;scroll-snap-type:y mandatory;overflow-x:hidden;overflow-y:scroll;scrollbar-width:none;text-align:center}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}}:host::-webkit-scrollbar{display:none}:host .picker-item{height:34px;line-height:34px;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;scroll-snap-align:center}:host .picker-item-empty{scroll-snap-align:none}:host(.picker-column-active) .picker-item.picker-item-active{color:var(--ion-color-base)}@media (any-hover: hover){:host(:focus){outline:none;background:rgba(var(--ion-color-base-rgb), 0.2)}}:host .picker-item-active{color:var(--ion-color-base)}";

var PickerColumnInternal = /*#__PURE__*/function () {
  function PickerColumnInternal(hostRef) {
    var _this = this;

    (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, PickerColumnInternal);

    (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.r)(this, hostRef);
    this.ionChange = (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.e)(this, "ionChange", 7);
    this.hapticsStarted = false;
    this.isColumnVisible = false;
    this.isActive = false;
    /**
     * A list of options to be displayed in the picker
     */

    this.items = [];
    /**
     * The color to use from your application's color palette.
     * Default options are: `"primary"`, `"secondary"`, `"tertiary"`, `"success"`, `"warning"`, `"danger"`, `"light"`, `"medium"`, and `"dark"`.
     * For more information on colors, see [theming](/docs/theming/basics).
     */

    this.color = 'primary';
    /**
     * If `true`, tapping the picker will
     * reveal a number input keyboard that lets
     * the user type in values for each picker
     * column. This is useful when working
     * with time pickers.
     *
     * @internal
     */

    this.numericInput = false;

    this.centerPickerItemInView = function (target) {
      var smooth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      _this.el.scroll({
        // (Vertical offset from parent) - (three empty picker rows) + (half the height of the target to ensure the scroll triggers)
        top: target.offsetTop - 3 * target.clientHeight + target.clientHeight / 2,
        left: 0,
        behavior: smooth ? 'smooth' : undefined
      });
    };
    /**
     * When ionInputModeChange is emitted, each column
     * needs to check if it is the one being made available
     * for text entry.
     */


    this.inputModeChange = function (ev) {
      if (!_this.numericInput) {
        return;
      }

      var _ev$detail = ev.detail,
          useInputMode = _ev$detail.useInputMode,
          inputModeColumn = _ev$detail.inputModeColumn;
      /**
       * If inputModeColumn is undefined then this means
       * all numericInput columns are being selected.
       */

      var isColumnActive = inputModeColumn === undefined || inputModeColumn === _this.el;

      if (!useInputMode || !isColumnActive) {
        _this.isActive = false;
        return;
      }

      _this.isActive = true;
    };
    /**
     * When the column scrolls, the component
     * needs to determine which item is centered
     * in the view and will emit an ionChange with
     * the item object.
     */


    this.initializeScrollListener = function () {
      var el = _this.el;
      var timeout;
      var activeEl = _this.activeItem;

      var scrollCallback = function scrollCallback() {
        (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
          if (timeout) {
            clearTimeout(timeout);
            timeout = undefined;
          }

          if (!_this.hapticsStarted) {
            (0,_haptic_9a9aa7ec_js__WEBPACK_IMPORTED_MODULE_6__.a)();
            _this.hapticsStarted = true;
          }
          /**
           * Select item in the center of the column
           * which is the month/year that we want to select
           */


          var bbox = el.getBoundingClientRect();
          var centerX = bbox.x + bbox.width / 2;
          var centerY = bbox.y + bbox.height / 2;
          var activeElement = el.shadowRoot.elementFromPoint(centerX, centerY);

          if (activeEl !== null) {
            activeEl.classList.remove(PICKER_COL_ACTIVE);
          }
          /**
           * If we are selecting a new value,
           * we need to run haptics again.
           */


          if (activeElement !== activeEl) {
            (0,_haptic_9a9aa7ec_js__WEBPACK_IMPORTED_MODULE_6__.b)();
          }

          activeEl = activeElement;
          activeElement.classList.add(PICKER_COL_ACTIVE);
          timeout = setTimeout(function () {
            var dataIndex = activeElement.getAttribute('data-index');
            /**
             * If no value it is
             * possible we hit one of the
             * empty padding columns.
             */

            if (dataIndex === null) {
              return;
            }

            var index = parseInt(dataIndex, 10);
            var selectedItem = _this.items[index];

            if (selectedItem.value !== _this.value) {
              _this.value = selectedItem.value;
              (0,_haptic_9a9aa7ec_js__WEBPACK_IMPORTED_MODULE_6__.h)();
              _this.hapticsStarted = false;
            }
          }, 250);
        });
      };
      /**
       * Wrap this in an raf so that the scroll callback
       * does not fire when component is initially shown.
       */


      (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_5__.r)(function () {
        el.addEventListener('scroll', scrollCallback);

        _this.destroyScrollListener = function () {
          el.removeEventListener('scroll', scrollCallback);
        };
      });
    };
  }

  (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(PickerColumnInternal, [{
    key: "valueChange",
    value: function valueChange() {
      if (this.isColumnVisible) {
        /**
         * Only scroll the active item into view and emit the value
         * change, when the picker column is actively visible to the user.
         */
        var items = this.items,
            value = this.value;
        this.scrollActiveItemIntoView();
        var findItem = items.find(function (item) {
          return item.value === value;
        });

        if (findItem) {
          this.ionChange.emit(findItem);
        }
      }
    }
    /**
     * Only setup scroll listeners
     * when the picker is visible, otherwise
     * the container will have a scroll
     * height of 0px.
     */

  }, {
    key: "componentWillLoad",
    value: function componentWillLoad() {
      var _this2 = this;

      var visibleCallback = function visibleCallback(entries) {
        var _a;

        var ev = entries[0];

        if (ev.isIntersecting) {
          /**
           * Because this initial call to scrollActiveItemIntoView has to fire before
           * the scroll listener is set up, we need to manage the active class manually.
           */
          var oldActive = (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_5__.g)(_this2.el).querySelector(".".concat(PICKER_COL_ACTIVE));
          oldActive === null || oldActive === void 0 ? void 0 : oldActive.classList.remove(PICKER_COL_ACTIVE);

          _this2.scrollActiveItemIntoView();

          (_a = _this2.activeItem) === null || _a === void 0 ? void 0 : _a.classList.add(PICKER_COL_ACTIVE);

          _this2.initializeScrollListener();

          _this2.isColumnVisible = true;
        } else {
          if (_this2.destroyScrollListener) {
            _this2.destroyScrollListener();

            _this2.destroyScrollListener = undefined;
          }

          _this2.isColumnVisible = false;
        }
      };

      new IntersectionObserver(visibleCallback, {
        threshold: 0.01
      }).observe(this.el);
      var parentEl = this.el.closest('ion-picker-internal');

      if (parentEl !== null) {
        parentEl.addEventListener('ionInputModeChange', function (ev) {
          return _this2.inputModeChange(ev);
        });
      }
    }
  }, {
    key: "scrollActiveItemIntoView",
    value: function scrollActiveItemIntoView() {
      var activeEl = this.activeItem;

      if (activeEl) {
        this.centerPickerItemInView(activeEl, false);
      }
    }
  }, {
    key: "activeItem",
    get: function get() {
      return (0,_helpers_eed79a2b_js__WEBPACK_IMPORTED_MODULE_5__.g)(this.el).querySelector(".picker-item[data-value=\"".concat(this.value, "\"]"));
    }
  }, {
    key: "render",
    value: function render() {
      var _createColorClasses,
          _this3 = this;

      var items = this.items,
          color = this.color,
          isActive = this.isActive,
          numericInput = this.numericInput;
      var mode = (0,_ionic_global_a049bcbf_js__WEBPACK_IMPORTED_MODULE_4__.b)(this);
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)(_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.H, {
        tabindex: 0,
        class: (0,_theme_a24ff1ad_js__WEBPACK_IMPORTED_MODULE_7__.c)(color, (_createColorClasses = {}, (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, mode, true), (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'picker-column-active', isActive), (0,D_muthus_nbtv_master_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(_createColorClasses, 'picker-column-numeric-input', numericInput), _createColorClasses))
      }, (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"), items.map(function (item, index) {
        return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
          class: "picker-item",
          "data-value": item.value,
          "data-index": index,
          onClick: function onClick(ev) {
            _this3.centerPickerItemInView(ev.target);
          }
        }, item.text);
      }), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"), (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.h)("div", {
        class: "picker-item picker-item-empty"
      }, "\xA0"));
    }
  }, {
    key: "el",
    get: function get() {
      return (0,_index_06cd27b1_js__WEBPACK_IMPORTED_MODULE_3__.i)(this);
    }
  }], [{
    key: "watchers",
    get: function get() {
      return {
        "value": ["valueChange"]
      };
    }
  }]);

  return PickerColumnInternal;
}();

var PICKER_COL_ACTIVE = 'picker-item-active';
PickerColumnInternal.style = {
  ios: pickerColumnInternalIosCss,
  md: pickerColumnInternalMdCss
};


/***/ })

}]);
//# sourceMappingURL=node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js.js.map